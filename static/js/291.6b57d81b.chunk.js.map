{"version":3,"file":"static/js/291.6b57d81b.chunk.js","mappings":"4OAEMA,EAAaC,EAAAA,GAAAA,GAAH,0EAMVC,EAAaD,EAAAA,GAAAA,GAAH,yVAmBVE,EAAaF,EAAAA,GAAAA,EAAH,8CAIVG,EAAaH,EAAAA,GAAAA,KAAH,8C,kBCGhB,EAvBqB,WACnB,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBH,GAAII,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAWM,EAAKC,QAA9B,GAC7B,GAAE,CAACN,KAGF,gCACGF,EAAQS,OAAS,IAAK,sEACvB,SAACf,EAAD,UACGM,EAAQU,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,UAACjB,EAAD,YACE,SAACE,EAAD,uBADF,IACqCc,GACnC,SAACf,EAAD,UAAagB,MAFEF,EADN,QASpB,C,+LC9BKG,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAF7C,cACQG,EADR,yBAISA,GAJT,2EAOeC,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BjB,GAA/B,uFACyBe,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDZ,EADC,oBACaa,EADb,oBADzB,cACQG,EADR,yBAISA,GAJT,2EAOeE,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BlB,GAA/B,uFACyBe,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDZ,EADC,4BACqBa,EADrB,oBADzB,cACQG,EADR,yBAISA,GAJT,2EAOeb,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCH,GAAlC,uFACyBe,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDZ,EADC,4BACqBa,EADrB,2BADzB,cACQG,EADR,yBAISA,GAJT,2EAOeG,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,uFACyBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEO,IAFlG,cACQJ,EADR,yBAISA,GAJT,kE","sources":["components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx","servises/fetchAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst ReviewItem = styled.li`\n  margin-bottom: 1rem;\n  padding: 1rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 0.5rem;\n  background-color: #fff;\n  h3 {\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 600;\n  }\n  p {\n    margin: 0;\n    font-size: 0.9rem;\n    line-height: 1.5;\n  }\n`;\n\nconst ReviewText = styled.p`\n  padding: 10px 0 0;\n`;\n\nconst ReviewSpan = styled.span`\n  font-weight: bold;\n`;\n\nexport { ReviewList, ReviewItem, ReviewText, ReviewSpan };\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {\n  ReviewList,\n  ReviewItem,\n  ReviewText,\n  ReviewSpan,\n} from './MovieReviews.styled';\n\nimport { fetchMoviesReviews } from 'servises/fetchAPI';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMoviesReviews(id).then(({ data }) => setReviews(data.results));\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length < 1 && <p>We don't have any reviews for this movie.</p>}\n      <ReviewList>\n        {reviews.map(({ author, content }, index) => (\n          <ReviewItem key={index}>\n            <ReviewSpan> Author:</ReviewSpan> {author}\n            <ReviewText>{content}</ReviewText>\n          </ReviewItem>\n        ))}\n      </ReviewList>\n    </>\n  );\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '31387222f9d913a960cb8ee3c225d2d3';\n\nasync function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nasync function fetchMoviesById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n}\n\nasync function fetchMoviesCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n}\n\nasync function fetchMoviesReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response;\n}\n\nasync function fetchMoviesSearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response;\n}\n\nexport {\n  fetchTrendingMovies,\n  fetchMoviesById,\n  fetchMoviesCast,\n  fetchMoviesSearch,\n  fetchMoviesReviews,\n};\n"],"names":["ReviewList","styled","ReviewItem","ReviewText","ReviewSpan","useState","reviews","setReviews","id","useParams","useEffect","fetchMoviesReviews","then","data","results","length","map","index","author","content","BASE_URL","API_KEY","fetchTrendingMovies","axios","response","fetchMoviesById","fetchMoviesCast","fetchMoviesSearch","query"],"sourceRoot":""}