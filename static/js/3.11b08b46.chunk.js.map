{"version":3,"file":"static/js/3.11b08b46.chunk.js","mappings":"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","sources":["components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/MovieForm/MovieForm.styled.jsx","components/MovieForm/MovieForm.jsx","pages/Movies.jsx","servises/fetchAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / 4 - 20px);\n  background-color: #f1c32b;\n  border-radius: 8px;\n  overflow: hidden;\n  text-align: center;\n  :hover {\n    box-shadow: 0px 10px 10px #072f13;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n`;\n\nexport const Title = styled.h3`\n  padding: 5px;\n  color: #2c0231;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Img, Item, StyledLink, Title } from './MoviesItem.styled';\n\nconst MoviesItem = ({ movies }) => {\n  const location = useLocation();\n\n  return movies.map(({ id, title, poster_path }) => (\n    <Item key={id}>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <Img\n            src={'https://image.tmdb.org/t/p/w500/' + poster_path}\n            alt=\"poster\"\n          />\n        </div>\n\n        <Title> {title}</Title>\n      </StyledLink>\n    </Item>\n  ));\n};\n\nexport default MoviesItem;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1600px;\n  margin: 0 auto;\n  padding: 10px 15px;\n  background-color: #2c0231;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n","import MoviesItem from 'components/MoviesItem/MoviesItem';\nimport { Container, List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <Container>\n      <List>\n        <MoviesItem movies={movies} />\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 600px;\n  height: 150px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 10px;\n  background-color: #2c0231;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 20px;\n  padding-left: 15px;\n  padding-top: 5px;\n  width: 80%;\n  height: 35px;\n  font-size: 16px;\n  border-radius: 5px;\n  background-color: #f0eeee;\n  outline: none;\n  transition: border 150ms ease-in;\n  &:focus,\n  &:hover {\n    border: 2px solid orange;\n  }\n`;\nexport const Button = styled.button`\n  width: 100px;\n  background-color: #f1c32b;\n  height: 32px;\n  font-size: 20px;\n  border-radius: 5px;\n  border: none;\n  transition: background-color 150ms ease-in, transform 150ms ease-in;\n  &:hover {\n    background-color: orange;\n    transform: scale(1.05);\n  }\n`;\n","import { Button, Form, Input } from './MovieForm.styled';\n\nconst MovieForm = ({ onSubmit }) => {\n  return (\n    <div>\n      <Form onSubmit={onSubmit}>\n        <Input type=\"text\" name=\"search\" />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default MovieForm;\n","import MovieForm from 'components/MovieForm/MovieForm';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesSearch } from 'servises/fetchAPI';\nimport { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const inputValue = evt.currentTarget.elements.search.value;\n    if (inputValue.trim() === '') {\n      setSearchParams({});\n      toast('Please, enter a query to search!');\n      return;\n    }\n    setSearchParams({ query: inputValue });\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      setMovies([]);\n      return;\n    }\n\n    fetchMoviesSearch(query)\n      .then(({ data }) => {\n        setMovies(data.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [query]);\n\n  return (\n    <>\n      <MovieForm onSubmit={handleSubmit} />\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '31387222f9d913a960cb8ee3c225d2d3';\n\nasync function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nasync function fetchMoviesById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n}\n\nasync function fetchMoviesCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n}\n\nasync function fetchMoviesReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response;\n}\n\nasync function fetchMoviesSearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response;\n}\n\nexport {\n  fetchTrendingMovies,\n  fetchMoviesById,\n  fetchMoviesCast,\n  fetchMoviesSearch,\n  fetchMoviesReviews,\n};\n"],"names":["StyledLink","styled","Link","Item","Img","Title","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Container","List","Form","Input","Button","onSubmit","type","name","useSearchParams","searchParams","setSearchParams","query","get","useState","setMovies","useEffect","fetchMoviesSearch","then","data","results","catch","error","console","log","evt","preventDefault","inputValue","currentTarget","elements","search","value","trim","toast","MoviesList","BASE_URL","API_KEY","fetchTrendingMovies","axios","response","fetchMoviesById","fetchMoviesCast","fetchMoviesReviews"],"sourceRoot":""}