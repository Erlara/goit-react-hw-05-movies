{"version":3,"file":"static/js/502.23d45b83.chunk.js","mappings":"iPAEaA,EAAOC,EAAAA,GAAAA,GAAH,yHAQJC,EAAOD,EAAAA,GAAAA,GAAH,+N,SC0BjB,EA/BkB,WAChB,IAAQE,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GACbO,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPJ,EAAQI,EAAKL,KACd,IACAM,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,CAACV,KAGF,0BACE,SAACH,EAAD,UACGM,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,QAAlC,OACR,UAACjB,EAAD,YACE,gBACEkB,IAAG,6CAAwCH,GAC3CI,IAAKH,EACLI,MAAM,SAER,uBAAIJ,KACJ,uCAAeF,OAPNG,EADH,OAcjB,C,+LChCKI,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAF7C,cACQG,EADR,yBAISA,GAJT,2EAOeC,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BzB,GAA/B,uFACyBuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDpB,EADC,oBACaqB,EADb,oBADzB,cACQG,EADR,yBAISA,GAJT,2EAOelB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BN,GAA/B,uFACyBuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDpB,EADC,4BACqBqB,EADrB,oBADzB,cACQG,EADR,yBAISA,GAJT,2EAOeE,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkC1B,GAAlC,uFACyBuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDpB,EADC,4BACqBqB,EADrB,2BADzB,cACQG,EADR,yBAISA,GAJT,2EAOeG,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,uFACyBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEO,IAFlG,cACQJ,EADR,yBAISA,GAJT,kE","sources":["components/MovieCast/MovieCast.styled.jsx","components/MovieCast/MovieCast.jsx","servises/fetchAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / 6 - 20px);\n  display: flex;\n  flex-direction: column;\n  background-color: #f1c32b;\n  border-radius: 8px;\n  overflow: hidden;\n  text-align: center;\n  color: #2c0231;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMoviesCast } from 'servises/fetchAPI';\nimport { Item, List } from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesCast(id)\n      .then(({ data }) => {\n        setCast(data.cast);\n      })\n      .catch(error => console.error(error));\n  }, [id]);\n\n  return (\n    <div>\n      <List>\n        {cast.map(({ character, profile_path, name, cast_id }) => (\n          <Item key={cast_id}>\n            <img\n              src={`https://image.tmdb.org/t/p/original${profile_path}`}\n              alt={name}\n              width=\"150\"\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default MovieCast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '31387222f9d913a960cb8ee3c225d2d3';\n\nasync function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nasync function fetchMoviesById(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n}\n\nasync function fetchMoviesCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n}\n\nasync function fetchMoviesReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response;\n}\n\nasync function fetchMoviesSearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response;\n}\n\nexport {\n  fetchTrendingMovies,\n  fetchMoviesById,\n  fetchMoviesCast,\n  fetchMoviesSearch,\n  fetchMoviesReviews,\n};\n"],"names":["List","styled","Item","id","useParams","useState","cast","setCast","useEffect","fetchMoviesCast","then","data","catch","error","console","map","character","profile_path","name","cast_id","src","alt","width","BASE_URL","API_KEY","fetchTrendingMovies","axios","response","fetchMoviesById","fetchMoviesReviews","fetchMoviesSearch","query"],"sourceRoot":""}